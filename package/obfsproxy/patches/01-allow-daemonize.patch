diff --git a/src/main.c b/src/main.c
index 0d690b7..a516114 100644
--- a/src/main.c
+++ b/src/main.c
@@ -31,6 +31,15 @@
 #include <event2/event.h>
 #include <event2/dns.h>
 
+
+#ifdef HAVE_UNISTD_H 
+
+#include <unistd.h>
+#include <syslog.h>
+#include <fcntl.h>
+
+#endif
+
 static struct event_base *the_event_base;
 static struct event *sig_int;
 static struct event *sig_term;
@@ -41,6 +50,68 @@ static int is_external_proxy=1;
 /* Whether to scrub connection addresses -- on by default */
 int safe_logging=1;
 
+
+#ifdef HAVE_UNISTD_H 
+void daemonize(char* pid_path);
+
+void daemonize(char* pid_path)
+{
+
+	//fork and end parent process
+	int i=fork();
+	if (i != 0)
+	{	
+		if(i < 0) //exit on fork error
+		{
+			exit(1);
+		}
+		else //this is parent, exit cleanly
+		{
+			exit(0);
+		}
+	}
+
+	/********************************
+	* child continues as a daemon after parent exits
+	********************************/
+	// obtain a new process group & close all file descriptors 
+	setsid();
+	for(i=getdtablesize();i>=0;--i)
+	{
+		close(i);
+	}
+
+	// close standard i/o  
+	freopen( "/dev/null", "r", stdin);
+	freopen( "/dev/null", "w", stdout);
+	freopen( "/dev/null", "w", stderr);
+
+
+	// record pid to lockfile, if pid is specified
+	if(pid_path != NULL)
+	{
+		int pid_file= open(pid_path,O_RDWR|O_CREAT,0644);
+		if(pid_file<0) // exit if we can't open file
+		{
+			exit(1);
+		}
+		if(lockf(pid_file,F_TLOCK,0)<0) // try to lock file, exit if we can't
+		{
+			exit(1);
+		}
+		char pid_str[25];
+		sprintf(pid_str,"%d\n",getpid());
+		if( write(pid_file,pid_str,strlen(pid_str)) < strlen(pid_str))
+		{
+			exit(1);
+		}
+	}
+
+}
+
+#endif
+
+
 /**
    Prints the obfsproxy usage instructions then exits.
 */
@@ -55,6 +126,11 @@ usage(void)
   for (i=0;i<n_supported_protocols;i++)
     fprintf(stderr,"[%s] ", supported_protocols[i]->name);
   fprintf(stderr, "\n* obfsproxy_args:\n"
+#ifdef HAVE_UNISTD_H 
+
+          "--daemonize - run as a daemon\n"
+	  "--daemonize_with_pid=<file> - run as a daemon, saving process id to <file>\n"
+#endif
           "--log-file=<file> ~ set logfile\n"
           "--log-min-severity=warn|notice|info|debug ~ "
           "set minimum logging severity (default: notice)\n"
@@ -175,6 +251,12 @@ handle_obfsproxy_args(const char *const *argv)
       safe_logging=0;
     } else if (!strncmp(argv[i], "--managed", 10)) {
       is_external_proxy=0;
+#ifdef HAVE_UNISTD_H 
+    } else if (!strncmp(argv[i], "--daemonize_with_pid=", 21)) {
+      daemonize( (char *)argv[i]+21 );
+    } else if (!strncmp(argv[i], "--daemonize", 12)) {
+      daemonize(NULL);
+#endif
     } else {
       log_error("Unrecognizable obfsproxy argument '%s'", argv[i]);
     }
