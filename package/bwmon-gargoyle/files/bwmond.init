#!/bin/sh /etc/rc.common
START=55

include /lib/network
include /usr/lib/gargoyle_firewall_util

tmp_cron="/tmp/tmp.cron"
download_table=filter
download_chain=bw_ingress
upload_table=mangle
upload_chain=bw_egress

bw_restore()
{
	bw_id="$1"
	backup_to_tmp="$2"

	if [ -e "/usr/data/bwmon/$bw_id.bw" ] ; then
		bw_set -i "$bw_id" -h -f /usr/data/bwmon/$bw_id.bw
	elif [ -e "/tmp/data/bwmon/$bw_id.bw" ] ; then
		bw_set -i "$bw_id" -h -f /tmp/data/bwmon/$bw_id.bw
	fi

	if [ -e "$tmp_cron" ] ; then
		if [ "$backup_to_tmp" = "1" ] ; then
			echo "0 0,4,8,12,16,20 * * * bw_get -i \"$bw_id\" -h -f \"/tmp/data/bwmon/$bw_id.bw\" " >> "$tmp_cron"
		else
			echo "0 0,4,8,12,16,20 * * * bw_get -i \"$bw_id\" -h -f \"/usr/data/bwmon/$bw_id.bw\" " >> "$tmp_cron"
		fi
	fi
}

update_cron()
{
	old_md5=$(md5sum /etc/crontabs/root)
	new_md5=$(md5sum "$tmp_cron")
	if [ "$old_md5" = "$new_md5" ] ; then
		rm "$tmp_cron"
	else
		mv "$tmp_cron" /etc/crontabs/root
		cron_active=$(ps | grep "crond" | grep -v "grep" )
		if [ -n "$cron_active" ] ; then
			/etc/init.d/cron restart
		fi
	fi
}


start()
{
	bw_if=$(uci -P "/var/state" get network.wan.ifname)
	if [ -z "$bw_if" ] ; then
		bw_if=$(uci -P "/var/state" get network.lan.ifname)	
	fi


	delete_chain_from_table $download_table $download_chain
	iptables -t $download_table -N $download_chain
	iptables -t $download_table -I INPUT $filter_insert_index  -i $bw_if -j $download_chain
	iptables -t $download_table -I FORWARD $filter_insert_index -i $bw_if -j $download_chain
	iptables -t $download_table -A $download_chain  #matches everything to monitor all download bandwidth


	
	delete_chain_from_table $upload_table $upload_chain
	iptables -t $upload_table -N $upload_chain
	iptables -t $upload_table -A POSTROUTING -o $bw_if -j $upload_chain
	
	minute_s=60;
	hour_s=$(($minute_s*60));
	day_s=$(($hour_s*24));


        m15_interval=2
        m15_num_intervals=449

	h15_interval=$((2*$minute_s))
	h15_num_intervals=449	        

	d15_interval="hour"
	d15_num_intervals=359
	
	y_interval="day"
	y_num_intervals=365

	iptables -t $download_table -A $download_chain -m bandwidth --id "total-download-15m" --reset_interval $m15_interval --intervals_to_save $m15_num_intervals
	iptables -t $upload_table -A $upload_chain -m bandwidth --id "total-upload-15m" --reset_interval $m15_interval --intervals_to_save $m15_num_intervals
	

	iptables -t $download_table -A $download_chain -m bandwidth --id "total-download-15h" --reset_interval $h15_interval --intervals_to_save $h15_num_intervals
	iptables -t $upload_table -A $upload_chain -m bandwidth --id "total-upload-15h" --reset_interval $h15_interval --intervals_to_save $h15_num_intervals
	
	iptables -t $download_table -A $download_chain -m bandwidth --id "total-download-15d" --reset_interval $d15_interval --intervals_to_save $d15_num_intervals
	iptables -t $upload_table -A $upload_chain -m bandwidth --id "total-upload-15d" --reset_interval $d15_interval --intervals_to_save $d15_num_intervals

	iptables -t $download_table -A $download_chain -m bandwidth --id "total-download-1y" --reset_interval $y_interval --intervals_to_save $y_num_intervals
	iptables -t $upload_table -A $upload_chain -m bandwidth --id "total-upload-1y" --reset_interval $y_interval --intervals_to_save $y_num_intervals
	
	ids="total-download-15m total-upload-15m total-download-15h total-upload-15h total-download-15d total-upload-15d total-download-1y total-upload-1y"
	
	if [ -e /etc/ethers ] ; then
		ethers=$(cat /etc/ethers | awk ' {print $2} ')
		

		#add config sections for all static ips
		for static_ip in $ethers ; do

			iptables -t $download_table -A $download_chain -d $static_ip -m bandwidth --id "$static_ip-download-15m" --reset_interval $m15_interval --intervals_to_save $m15_num_intervals
			iptables -t $upload_table -A $upload_chain -s $static_ip -m bandwidth --id "$static_ip-upload-15m" --reset_interval $m15_interval --intervals_to_save $m15_num_intervals

			iptables -t $download_table -A $download_chain -d $static_ip -m bandwidth --id "$static_ip-download-15h" --reset_interval $h15_interval --intervals_to_save $h15_num_intervals
			iptables -t $upload_table -A $upload_chain -s $static_ip -m bandwidth --id "$static_ip-upload-15h" --reset_interval $h15_interval --intervals_to_save $h15_num_intervals

			iptables -t $download_table -A $download_chain -d $static_ip -m bandwidth --id "$static_ip-download-15d" --reset_interval $d15_interval --intervals_to_save $d15_num_intervals
			iptables -t $upload_table -A $upload_chain -s $static_ip -m bandwidth --id "$static_ip-upload-15d" --reset_interval $d15_interval --intervals_to_save $d15_num_intervals
		
			ids="$ids $static_ip-download-15m $static_ip-upload-15m $static_ip-download-15h $static_ip-upload-15h $static_ip-download-15d $static_ip-upload-15d"
		done
	fi


	qos_enabled=$(ls /etc/rc.d/*qos_gargoyle 2>/dev/null)
	if [ -n "$qos_enabled" ] && [ -e /etc/qos_class_marks ] ; then
		qos_table="mangle"
		qos_upload_chain="qos_egress"
		qos_download_chain="qos_ingress"

		upload_data=$(cat /etc/qos_class_marks | awk ' { if($1 == "upload"){print "qos-upload-"$2":"$3"/"$4};}' )
		download_data=$(cat /etc/qos_class_marks | awk ' { if($1 == "download"){print "qos-download-"$2":"$3"/"$4};}' )

		for upload_info in $upload_data ; do
			mark=$(echo $upload_info | awk ' BEGIN { FS=":";} { print $2; }')
			class=$(echo $upload_info | awk ' BEGIN { FS=":";} { print $1; }')

			iptables -t $upload_table -A $upload_chain -m connmark --mark $mark -m bandwidth --id "$class-15m" --reset_interval $m15_interval --intervals_to_save $m15_num_intervals
			iptables -t $upload_table -A $upload_chain -m connmark --mark $mark -m bandwidth --id "$class-15h" --reset_interval $h15_interval --intervals_to_save $h15_num_intervals
			iptables -t $upload_table -A $upload_chain -m connmark --mark $mark -m bandwidth --id "$class-15d" --reset_interval $d15_interval --intervals_to_save $d15_num_intervals

			ids="$ids $class-15m $class-15h $class-15d"
		done
		
		
		for download_info in $download_data ; do
			mark=$(echo $download_info | awk ' BEGIN { FS=":";} { print $2; }')
			class=$(echo $download_info | awk ' BEGIN { FS=":";} { print $1; }')
			
			iptables -t $download_table -A $download_chain -m connmark --mark $mark -m bandwidth --id "$class-15m" --reset_interval $m15_interval --intervals_to_save $m15_num_intervals
			iptables -t $download_table -A $download_chain -m connmark --mark $mark -m bandwidth --id "$class-15h" --reset_interval $h15_interval --intervals_to_save $h15_num_intervals
			iptables -t $download_table -A $download_chain -m connmark --mark $mark -m bandwidth --id "$class-15d" --reset_interval $d15_interval --intervals_to_save $d15_num_intervals

			ids="$ids $class-15m $class-15h $class-15d"
		done
	fi

	touch /etc/crontabs/root
	cat /etc/crontabs/root | grep -v "bw_get" > "$tmp_cron"
	

	for i in $ids ; do
		is_15m=$(echo "$i" | grep "15m")
		is_15h=$(echo "$i" | grep "15h")
		if [ -n "$is_15m" ] || [ -n "$is_15h" ] ; then
			bw_restore "$i" 1
		else
			bw_restore "$i" 0
		fi
	done

	update_cron 
}

stop()
{
	touch /etc/crontabs/root

	cat /etc/crontabs/root | grep bw_get | sed 's/.*bw_get/bw_get/g' > /tmp/bw_backup.tmp.sh
	sh /tmp/bw_backup.tmp.sh
	rm /tmp/bw_backup.tmp.sh

	cat /etc/crontabs/root | grep -v "bw_get"> "$tmp_cron"
	update_cron
	
	delete_chain_from_table $download_table $download_chain
	delete_chain_from_table $upload_table $upload_chain
}

restart()
{
	start ;
}
