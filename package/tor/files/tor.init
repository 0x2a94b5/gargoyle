#!/bin/sh /etc/rc.common
# Copyright (C) 2006 OpenWrt.org
START=50

BIN=tor
VAR_D=/etc/$BIN/var
RUN_D=/var/run
PID_F=$RUN_D/$BIN.pid
OPID_F=$RUN_D/obfsproxy.pid
RUN_USER=root
RUN_GROUP=root
BOOT="0"

OPTIONS=" --User $RUN_USER  --PidFile '$PID_F' --RunAsDaemon 1 --DataDirectory '/var/tor' --SocksPort 0 "

boot()
{
	BOOT="1"
	start
}

start()
{
	enabled=$(uci get tor.global.enabled)
	client_mode=$(uci get tor.client.client_mode)
	relay_mode=$(uci get tor.relay.relay_mode)
	

	if [ "$enabled" = "0" ] || [ "$client_mode$relay_mode" = "00" ] ; then
		exit
	fi

	mkdir -p /var/tor/keys

        [ -d $VAR_D ] || ( mkdir -m 0700 -p $VAR_D && chown $RUN_USER:$RUN_GROUP $VAR_D )
	[ -d $RUN_D ] || mkdir -p $RUN_D
	[ -f $PID_F ] || ( touch $PID_F && chown $RUN_USER:$RUN_GROUP $PID_F )
	
	client_zone=$( uci get tor.client.zone                                  2>/dev/null)
	trans_port=$( uci get tor.global.trans_port                             2>/dev/null)
	dns_port=$( uci get tor.global.dns_port                                 2>/dev/null)
	control_port=$( uci get tor.global.control_port                         2>/dev/null)
	hidden_service_subnet=$( uci get tor.global.hidden_service_subnet       2>/dev/null)
	hidden_service_mask_bits=$( uci get tor.global.hidden_service_mask_bits 2>/dev/null)
	loglevel=$( uci get tor.global.loglevel                                 2>/dev/null)
	if [ -z "$hidden_service_subnet" ] || [ -z "$hidden_service_mask_bits" ] ; then
		hidden_service_subnet="10.192.0.0"
		hidden_service_mask_bits="12"
		uci set tor.global.hidden_service_subnet="$hidden_service_subnet"
		uci set tor.global.hidden_service_mask_bits="$hidden_service_mask_bits"
		uci commit
	fi
	
	
	
	
	
	if [ -z "$client_zone" ] ; then
		client_zone="lan"
	fi
	if [ -z "$trans_port" ] ; then
		trans_port=9040
	fi
	if [ -z "$dns_port" ] ; then
		dns_port=9053
	fi
	if [ -z "$control_port" ] ; then
		control_port=9051
	fi
	
	OPTIONS="$OPTIONS  --Log '$loglevel syslog' --TransPort $trans_port --DNSPort $dns_port --ControlPort $control_port --VirtualAddrNetwork $hidden_service_subnet/$hidden_service_mask_bits --AutomapHostsOnResolve 1 "
	if [ -n "$client_mode" ] && [ "$client_mode" != "0" ] ; then
		client_listen_ip=$(uci -P /var/state get network.$client_zone.ipaddr 2>/dev/null)
		
		use_bridge_ip=$(uci get tor.client.use_bridge_ip 2>/dev/null)
		use_bridge_port=$(uci get tor.client.use_bridge_port 2>/dev/null)
		use_bridge_opbfsproxy=$(uci get tor.client.use_bridge_obfsproxy 2>/dev/null)

		if [ -n "$client_listen_ip" ] ; then
			OPTIONS="$OPTIONS --TransListenAddress '$client_listen_ip' --DNSListenAddress '$client_listen_ip' "
		fi
		if [ -n "$use_bridge_ip" ] && [ -n "$use_bridge_port" ] ; then
			if [ "$use_bridge_obfsproxy" = "1" ] ; then
				OPTIONS="$OPTIONS --UseBridges 1 --Bridge 'obfs2 $use_bridge_ip:$use_bridge_port' --ClientTransportPlugin 'obfs2 exec /usr/sbin/obfsproxy --managed' "
			else
				OPTIONS="$OPTIONS --UseBridges 1 --Bridge '$use_bridge_ip:$use_bridge_port' "
			fi
		fi
	fi

	relay_options=""
	if [ "$relay_mode" != "0" ] && [ -n "$relay_mode" ] ; then
		
		relay_port=$(uci get tor.relay.relay_port)
		max_bw_rate_kb=$(uci get tor.relay.max_bw_rate_kb)
		max_bw_burst_kb=$(uci get tor.relay.max_bw_burst_kb)
		relay_nickname=$( uci get tor.relay.relay_nickname )
		relay_contact=$( uci get tor.relay.relay_contact )
		obfsproxy_port=$( uci get tor.relay.obfsproxy_port )
		
		relay_ip=0.0.0.0
				
		relay_options=" --ORPort $relay_port --ORListenAddress $relay_ip:$relay_port "
		if [ "$relay_mode" = "1" ] ; then
			relay_options=" --BridgeRelay 1 $relay_options --BridgeRecordUsageByCountry 0  "
			if [ -n "$obfsproxy_port" ] && [ "$obfsproxy_port" != "0" ] ; then
				obfsproxy --no-log --daemonize_with_pid=$OPID_F obfs2 --dest=127.0.0.1:$relay_port server 0.0.0.0:$obfsproxy_port
			fi
		else
			if [ -n "$relay_nickname" ] ; then
				relay_options=" $relay_options --Nickname '$relay_nickname' "
			fi
			if [ -n "$relay_contact" ]  ; then
				relay_options=" $relay_options --ContactInfo '$relay_contact' "
			fi
		fi
			

		eval "$BIN $OPTIONS $relay_options  --RelayBandwidthRate '$max_bw_rate_kb KB' --RelayBandwidthBurst '$max_bw_burst_kb KB' --MaxAdvertisedBandwidth '$max_bw_rate_kb KB' --Exitpolicy 'reject *:*'"
	fi
	if [ -z "$relay_options" ] ; then
		eval "$BIN $OPTIONS --ClientOnly 1"
	fi


	if [ "$BOOT" = "0" ] ; then
		sh /etc/tor.firewall
	fi	
}

stop()
{
	[ -f $PID_F ] && kill -9 $(cat $PID_F)
	[ -f $OPID_F ] && kill   $(cat $OPID_F)
	
	delete_chain_from_table nat tor_client
	delete_chain_from_table filter tor_client
	delete_chain_from_table filter tor_relay
	delete_chain_from_table filter tor_relay_down_bw
	delete_chain_from_table mangle tor_relay_up_bw
	
	rm -rf "$PID_F"
}

restart()
{
	stop
	sleep 1
	start
}

