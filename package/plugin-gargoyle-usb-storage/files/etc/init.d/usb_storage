#!/bin/sh /etc/rc.common

START=56

update_sharetype()
{
	section="$1"
	config_get path $1 path
	if [ "$path" = "$cur_mount" ] ; then
		shared=1		
	fi
}


start()
{
	gdisplay=$(uci get gargoyle.display.system_usb_storage 2>/dev/null)
	if [ -z "$gdisplay" ] ; then
		uci set gargoyle.display.system_usb_storage='USB Storage'
		uci set gargoyle.scripts.system_usb_storage='usb_storage.sh'
		uci set gargoyle.system.usb_storage='350'
		uci commit
	fi
	
	rm -rf /tmp/mounted_usb_storage.tab
	drives=$(blkid | sed 's/:.*UUID=\"/:/g' | sed 's/\".*$//g')
	mounted=""
	for devid in $drives ; do
		id=$(echo $devid | sed 's/^.*://g')
		d=$(echo $devid | sed 's/:.*$//g')
		dev=$(echo $d | sed 's/[0-9]*$//g')
		type=$(fdisk -l "$dev" | grep "^$d" | awk ' { print $NF }'  )  
		err="";
		if [ "$type" = "FAT32" ] || [ "$type" = "FAT16" ] ; then
			mkdir -p "/tmp/usb_mount/$id"
			umount "/tmp/usb_mount/$id" 2>/dev/null
			err=$(mount -t vfat "$d" "/tmp/usb_mount/$id")
		elif  [ "$type" = "Linux" ] ; then
			mkdir -p "/tmp/usb_mount/$id"
			umount "/tmp/usb_mount/$id" 2>/dev/null
			err="tmp"
			ext_num=4
			while [ -n "$err" ] && [ $ext_num -ge 2 ] ; do
				type="ext$ext_num"
				err=$(mount -t $type "$d" "/tmp/usb_mount/$id" 2>&1)
				ext_num=$(($ext_num-1))
			done
		fi
		if [ -n "$err" ] ; then
			umount "/tmp/usb_mount/$id" 2>/dev/null
		else
			share_type=""
			cur_mount="/tmp/usb_mount/$id"
			
			shared=0
			config_load "samba"
			config_foreach update_sharetype "sambashare"
			if [ "$shared" = "1" ] ; then share_type="S" ; fi
			
			shared=0
			config_load "nfsd"
			config_foreach update_sharetype "nfsshare"
			if [ "$shared" = "1" ] ; then share_type="N$share_type" ; fi
			if [ -z "$share_type" ] ; then share_type="-" ; fi
					
			share_size=$(df  | grep "$d" | awk '{ print $2 }')
			if [ -z "$share_size" ] ; then share_size="-" ; fi
			if [ -n "$share_size" ] ; then share_size=$(($share_size*1024)) ; fi

			echo "$d	/tmp/usb_mount/$id	$type	$share_size	$share_type"  >>/tmp/mounted_usb_storage.tab
			mounted="$mounted /tmp/usb_mount/$id"
		fi
	done
	
}

stop()
{
	echo "stopping"
}
