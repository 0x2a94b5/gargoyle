--- /home/eric/tmp/kamikaze-7.09-src/package/madwifi/files/lib/wifi/madwifi.sh	2007-09-30 14:03:49.000000000 -0400
+++ package/madwifi/files/lib/wifi/madwifi.sh	2008-06-29 15:33:34.000000000 -0400
@@ -71,9 +71,12 @@
 )
 
 enable_atheros() {
+	local device="$1"
 	config_get channel "$device" channel
 	config_get vifs "$device" vifs
-	
+
+	[ auto = "$channel" ] && channel=0
+
 	local first=1
 	for vif in $vifs; do
 		nosbeacon=
@@ -103,18 +106,19 @@
 				*) agmode=auto;;
 			esac
 			iwconfig "$ifname" channel "$channel" >/dev/null 2>/dev/null 
-			ifconfig "$ifname" up
-			sleep 1
 			iwpriv "$ifname" mode "$agmode"
 			iwpriv "$ifname" pureg "$pureg"
 			iwconfig "$ifname" channel "$channel" >/dev/null 2>/dev/null 
+			ifconfig "$ifname" up
 		}
 	
 		config_get_bool hidden "$vif" hidden 0
 		iwpriv "$ifname" hide_ssid "$hidden"
 
-		config_get_bool ff "$vif" ff 0
-		iwpriv "$ifname" ff "$ff"
+		config_get ff "$vif" ff
+		if [ -n "$ff" ]; then
+			iwpriv "$ifname" ff "$ff"
+		fi
 
 		config_get wds "$vif" wds
 		case "$wds" in
@@ -156,43 +160,88 @@
 		esac
 		config_get ssid "$vif" ssid
 
-		[ "$mode" = "sta" ] && {
-			config_get_bool bgscan "$vif" bgscan 1
-			iwpriv "$ifname" bgscan "$bgscan"
-		}
+		config_get_bool bgscan "$vif" bgscan
+		[ -n "$bgscan" ] && iwpriv "$ifname" bgscan "$bgscan"
 
-		config_get_bool antdiv "$device" diversity 1
-		sysctl -w dev."$device".diversity="$antdiv" >&-
+		config_get_bool antdiv "$device" diversity
+		[ -n "$antdiv" ] && sysctl -w dev."$device".diversity="$antdiv" >&-
 
 		config_get antrx "$device" rxantenna
-		if [ -n "$antrx" ]; then
-			sysctl -w dev."$device".rxantenna="$antrx" >&-
-		fi
+		[ -n "$antrx" ] && sysctl -w dev."$device".rxantenna="$antrx" >&-
 
 		config_get anttx "$device" txantenna
-		if [ -n "$anttx" ]; then
-			sysctl -w dev."$device".txantenna="$anttx" >&-
-		fi
+		[ -n "$anttx" ] && sysctl -w dev."$device".txantenna="$anttx" >&-
 
 		config_get distance "$device" distance
-		if [ -n "$distance" ]; then
-			athctrl -i "$device" -d "$distance" >&-
-		fi
+		[ -n "$distance" ] && athctrl -i "$device" -d "$distance" >&-
 
 		config_get txpwr "$vif" txpower
-		if [ -n "$txpwr" ]; then
-			iwconfig "$ifname" txpower "${txpwr%%.*}"
-		fi
+		[ -n "$txpwr" ] && iwconfig "$ifname" txpower "${txpwr%%.*}"
+
+		config_get rate "$vif" rate
+		[ -n "$rate" ] && iwconfig "$ifname" rate "${rate%%.*}"
+
+		config_get mcast_rate "$vif" mcast_rate
+		[ -n "$mcast_rate" ] && iwpriv "$ifname" mcast_rate "${mcast_rate%%.*}"
 
 		config_get frag "$vif" frag
-		if [ -n "$frag" ]; then
-			iwconfig "$ifname" frag "${frag%%.*}"
-		fi
+		[ -n "$frag" ] && iwconfig "$ifname" frag "${frag%%.*}"
 
 		config_get rts "$vif" rts
-		if [ -n "$rts" ]; then
-			iwconfig "$ifname" rts "${rts%%.*}"
-		fi
+		[ -n "$rts" ] && iwconfig "$ifname" rts "${rts%%.*}"
+
+		config_get_bool doth "$vif" 80211h
+		[ -n "$doth" ] && iwpriv "$ifname" doth "$doth"
+
+		config_get_bool comp "$vif" compression
+		[ -n "$comp" ] && iwpriv "$ifname" compression "$comp"
+
+		config_get_bool minrate "$vif" minrate
+		[ -n "$minrate" ] && iwpriv "$ifname" minrate "$minrate"
+
+		config_get_bool maxrate "$vif" maxrate
+		[ -n "$maxrate" ] && iwpriv "$ifname" maxrate "$maxrate"
+
+		config_get_bool burst "$vif" bursting
+		[ -n "$burst" ] && iwpriv "$ifname" burst "$burst"
+
+		config_get_bool wmm "$vif" wmm
+		[ -n "$wmm" ] && iwpriv "$ifname" wmm "$wmm"
+
+		config_get_bool xr "$vif" xr
+		[ -n "$xr" ] && iwpriv "$ifname" xr "$xr"
+
+		config_get_bool ar "$vif" ar
+		[ -n "$ar" ] && iwpriv "$ifname" ar "$ar"
+
+		config_get_bool turbo "$vif" turbo
+		[ -n "$turbo" ] && iwpriv "$ifname" turbo "$turbo"
+
+		config_get_bool doth "$vif" doth 0
+		[ -n "$doth" ] && iwpriv "$ifname" doth "$doth"
+
+		config_get maclist "$vif" maclist
+		[ -n "$maclist" ] && {
+			# flush MAC list
+			iwpriv "$ifname" maccmd 3
+			for mac in $maclist; do
+				iwpriv "$ifname" addmac "$mac"
+			done
+		}
+
+		config_get macpolicy "$vif" macpolicy
+		case "$macpolicy" in
+			allow)
+				iwpriv "$ifname" maccmd 1
+			;;
+			deny)
+				iwpriv "$ifname" maccmd 2
+			;;
+			*)
+				# default deny policy if mac list exists
+				[ -n "$maclist" ] && iwpriv "$ifname" maccmd 2
+			;;
+		esac
 
 		ifconfig "$ifname" up
 		iwconfig "$ifname" channel "$channel" >/dev/null 2>/dev/null 
@@ -222,22 +271,34 @@
 				fi
 			;;
 			wds|sta)
-				case "$enc" in 
+				config_get_bool usepassphrase "$vif" passphrase 1
+				case "$enc" in
 					PSK|psk|PSK2|psk2)
 						case "$enc" in
 							PSK|psk)
-								proto='proto=WPA';;
+								proto='proto=WPA'
+								if [ "$usepassphrase" = "1" ]; then
+									passphrase="psk=\"${key}\""
+								else
+									passphrase="psk=${key}"
+								fi
+								;;
 							PSK2|psk2)
-								proto='proto=RSN';;
+								proto='proto=RSN'
+                                                                if [ "$usepassphrase" = "1" ]; then
+                                                                        passphrase="psk=\"${key}\""
+                                                                else
+                                                                        passphrase="psk=${key}"
+                                                                fi
+								;;
 						esac
 						cat > /var/run/wpa_supplicant-$ifname.conf <<EOF
-ctrl_interface=/var/run/wpa_supplicant
 network={
 	scan_ssid=1
 	ssid="$ssid"
 	key_mgmt=WPA-PSK
 	$proto
-	psk="$key"
+	$passphrase
 }
 EOF
 					;;
@@ -262,7 +323,7 @@
 		cat <<EOF
 config wifi-device  $dev
 	option type     atheros
-	option channel  5
+	option channel  auto
 
 	# REMOVE THIS LINE TO ENABLE WIFI:
 	option disabled 1
--- ../kamikaze-7.09-orig/package/broadcom-wl/files/lib/wifi/broadcom.sh	2007-09-20 04:54:54.000000000 -0400
+++ package/broadcom-wl/files/lib/wifi/broadcom.sh	2008-07-01 06:41:01.000000000 -0400
@@ -52,7 +52,7 @@
 	case "$adhoc:$sta:$apmode" in
 		1*)
 			ap=0
-			mssid=0
+			mssid=
 			infra=0
 		;;
 		:1:1)
@@ -62,7 +62,7 @@
 		:1:)
 			wet=1
 			ap=0
-			mssid=0
+			mssid=
 		;;
 		::)
 			radio=0
@@ -97,6 +97,9 @@
 	config_get slottime "$device" slottime
 	config_get rxant "$device" rxant
 	config_get txant "$device" txant
+	config_get_bool frameburst "$device" frameburst
+	config_get macfilter "$device" macfilter
+	config_get maclist "$device" maclist
 	local vif_pre_up vif_post_up vif_do_up
 
 	_c=0
@@ -112,6 +115,18 @@
 	} || {
 		slottime="${slottime:--1}"
 	}
+	
+	case "$macfilter" in
+		allow|2)
+			macfilter=2;
+		;;
+		deny|1)
+			macfilter=1;
+		;;
+		disable|none|0)
+			macfilter=0;
+		;;
+	esac
 
 	for vif in $vifs; do
 		config_get mode "$vif" mode
@@ -144,11 +159,11 @@
 							config_get k "$vif" key$knr
 							[ -n "$k" ] || continue
 							[ "$defkey" = "$knr" ] && def="=" || def=""
-							append vif_pre_up "wepkey $def$knr,$k" "$N"
+							append vif_do_up "wepkey $def$knr,$k" "$N"
 						done
 					;;
 					"");;
-					*) append vif_pre_up "wepkey =1,$key" "$N";;
+					*) append vif_do_up "wepkey =1,$key" "$N";;
 				esac
 			;;
 			*psk*|*PSK*)
@@ -177,17 +192,15 @@
 				nasopts="-r \"\$${vif}_key\" -h $server -p $port"
 			;;
 		esac
-		append vif_post_up "wsec $wsec" "$N"
-		append vif_post_up "wpa_auth $auth" "$N"
-		append vif_post_up "wsec_restrict $wsec_r" "$N"
-		append vif_post_up "eap_restrict $eap_r" "$N"
+		append vif_do_up "wsec $wsec" "$N"
+		append vif_do_up "wpa_auth $auth" "$N"
+		append vif_do_up "wsec_restrict $wsec_r" "$N"
+		append vif_do_up "eap_restrict $eap_r" "$N"
 		
 		config_get ssid "$vif" ssid
 		append vif_post_up "vlan_mode 0" "$N"
 		append vif_post_up "ssid $ssid" "$N"
-		case "$mode" in
-			sta|adhoc) append vif_do_up "ssid $ssid" "$N";;
-		esac
+		append vif_do_up "ssid $ssid" "$N"
 		
 		append vif_post_up "enabled 1" "$N"
 		
@@ -207,8 +220,8 @@
 			[ "$mode" = "sta" ] && {
 				nas_mode="-S"
 				[ -z "$bridge" ] || {
-					append vif_pre_up "supplicant 1" "$N"
-					append vif_pre_up "passphrase $key" "$N"
+					append vif_post_up "supplicant 1" "$N"
+					append vif_post_up "passphrase $key" "$N"
 					
 					use_nas=0
 				}
@@ -221,9 +234,9 @@
 	wlc stdin <<EOF
 $ifdown
 
-ap $ap
-mssid $mssid
 apsta $apsta
+ap $ap
+${mssid:+mssid $mssid}
 infra $infra
 ${wet:+wet 1}
 802.11d 0
@@ -232,14 +245,15 @@
 txant ${txant:-3}
 
 radio ${radio:-1}
-macfilter 0
-maclist none
+macfilter ${macfilter:-0}
+maclist ${maclist:-none}
 wds none
 ${wds:+wds $wds}
-${channel:+channel $channel}
 country ${country:-IL0}
+${channel:+channel $channel}
 maxassoc ${maxassoc:-128}
 slottime ${slottime:--1}
+${frameburst:+frameburst $frameburst}
 
 $vif_pre_up
 up
--- ../kamikaze-7.09-orig/include/verbose.mk	2007-09-20 04:53:16.000000000 -0400
+++ include/verbose.mk	2008-07-08 10:46:15.000000000 -0400
@@ -38,7 +38,7 @@
   else
     export QUIET:=1
     ifeq ($(KBUILD_VERBOSE),0)
-      MAKE:=&>/dev/null $(MAKE)
+      MAKE:= >/dev/null 2>&1 $(MAKE)
     endif
     MAKE:=cmd() { $(MAKE) $$* || {  echo "Build failed. Please re-run make with V=99 to see what's going on"; false; } } 3>&1 4>&2; cmd
   endif
--- ../kamikaze-7.09-orig/include/image.mk	2007-09-20 04:53:16.000000000 -0400
+++ include/image.mk	2008-07-10 20:43:15.000000000 -0400
@@ -89,6 +89,26 @@
 	find $(BUILD_DIR)/root -type d | $(XARGS) chmod 0755
 	mkdir -p $(BUILD_DIR)/root/tmp
 	chmod 0777 $(BUILD_DIR)/root/tmp
+
+
+	#############################################################################
+	############# CUSTOM GARGOYLE CONFIGURATION #################################
+	#############################################################################
+	# we put custom configuration here because this is the absolute last thing called before we build an image
+	# right now it isn't as important that all configuration be done this late, but putting it here makes sure
+	# no other scripts can be called before images are built, modifying or reversing our changes.
+
+	# remove init scripts of things that should not be active by default
+	IPKG_INSTROOT=$(BUILD_DIR)/root sh $(BUILD_DIR)/root/etc/rc.common $(BUILD_DIR)/root/etc/init.d/httpd disable
+	IPKG_INSTROOT=$(BUILD_DIR)/root sh $(BUILD_DIR)/root/etc/rc.common $(BUILD_DIR)/root/etc/init.d/miniupnpd disable
+	IPKG_INSTROOT=$(BUILD_DIR)/root sh $(BUILD_DIR)/root/etc/rc.common $(BUILD_DIR)/root/etc/init.d/qos_gargoyle disable
+
+	# ensure ntpclient is active
+	chmod 700 $(BUILD_DIR)/root/etc/hotplug.d/iface/20-ntpclient
+
+
+	##############################################################################
+
 endef
 
 define Image/mkfs/prepare
--- ../kamikaze-7.09-orig/package/base-files/files/etc/passwd	2007-09-20 04:54:42.000000000 -0400
+++ package/base-files/files/etc/passwd	2008-07-02 20:47:12.000000000 -0400
@@ -1,2 +1,2 @@
-root:!:0:0:root:/tmp:/bin/ash
+root:$1$V4UetPzk$CYXluq4wUazHjmCDBCqXF.:0:0:root:/tmp:/bin/ash
 nobody:*:65534:65534:nobody:/var:/bin/false
--- ../kamikaze-7.09-orig/target/sdk/files/Makefile	2007-09-20 04:54:28.000000000 -0400
+++ target/sdk/files/Makefile	2008-07-07 10:51:34.000000000 -0400
@@ -74,9 +74,9 @@
 	$(MAKE) package/compile
 	-( \
 		cd package; \
-		find . -maxdepth 2 -name Config.in | \
-			sed -e 's,/Config.in,,g' | \
-			xargs -n1 $(MAKE) compile -C; \
+		for configfile in `find . -maxdepth 2 -name Config.in` ; do \
+			$(MAKE) compile -C `dirname $$configfile` ; \
+		done \
 	)
 
 clean: FORCE
